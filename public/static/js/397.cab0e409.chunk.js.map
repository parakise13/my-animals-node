{"version":3,"file":"static/js/397.cab0e409.chunk.js","mappings":"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","sources":["webpack://my-animal/./src/component/Pages/UpdateAnimal.module.scss?f9f5","component/Pages/UpdateAnimal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"animal-list\":\"UpdateAnimal_animal-list__mMSzy\",\"animal-list__detail\":\"UpdateAnimal_animal-list__detail__Ud8Zc\",\"update-animal__desc\":\"UpdateAnimal_update-animal__desc__N6sfD\",\"animal-list__btns\":\"UpdateAnimal_animal-list__btns__h4xvU\",\"not-found\":\"UpdateAnimal_not-found__sj5it\"};","import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport useHttpReq from \"../../shared/hooks/http-hook\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport Input from \"../Layout/Input\";\r\nimport LoadingSpinner from \"../Layout/LoadingSpinner\";\r\nimport ErrorModal from \"./ErrorModal\";\r\n\r\nimport classes from \"./UpdateAnimal.module.scss\";\r\nimport { AnimalProps } from \"./UserAnimalList\";\r\n\r\nconst UpdateAnimal = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpReq();\r\n  const animalId = useParams().animalId;\r\n  const [loadedAnimal, setLoadedAnimal] = useState<AnimalProps>();\r\n\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      animalName: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n      species: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n      age: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: true,\r\n      },\r\n    },\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getAnimal = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/animals/${animalId}`\r\n        );\r\n        setLoadedAnimal(responseData.animal);\r\n\r\n        setFormData(\r\n          {\r\n            animalName: {\r\n              value: responseData.animal.animalName,\r\n              isValid: true,\r\n            },\r\n            species: {\r\n              value: responseData.animal.species,\r\n              isValid: true,\r\n            },\r\n            age: {\r\n              value: responseData.animal.age,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.animal.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err: any) {}\r\n    };\r\n\r\n    getAnimal();\r\n  }, [setFormData, animalId, sendRequest]);\r\n\r\n  const handleSubmitUpdate = async (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault();\r\n\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/animals/${animalId}`,\r\n        \"PATCH\",\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${auth.token}`,\r\n        },\r\n        JSON.stringify({\r\n          animalName: formState.inputs.animalName.value,\r\n          species: formState.inputs.species.value,\r\n          age: formState.inputs.age.value,\r\n          description: formState.inputs.description.value,\r\n        })\r\n      );\r\n\r\n      navigate(-1);\r\n    } catch (err: any) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={classes[\"loading\"]}>\r\n        {isLoading && <LoadingSpinner isLoading={isLoading} />}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedAnimal && !error) {\r\n    return (\r\n      <div className={classes[\"not-found\"]}>\r\n        <h2>반려동물을 찾을 수 없습니다.</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && <ErrorModal onClose={clearError} errorText={error} />}\r\n      {!isLoading && loadedAnimal && (\r\n        <form onSubmit={handleSubmitUpdate} className={classes[\"animal-list\"]}>\r\n          {loadedAnimal && (\r\n            <div>\r\n              <div className={classes[\"animal-list__detail\"]}>\r\n                <div>\r\n                  <label htmlFor=\"animalName\">이름 : </label>\r\n                  <Input\r\n                    id=\"animalName\"\r\n                    type=\"text\"\r\n                    element=\"input\"\r\n                    placeholder=\"이름를 입력해주세요.\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    initialValue={loadedAnimal.animalName}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    errorText={\"올바른 이름를 입력해주세요.\"}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"species\">종류 : </label>\r\n                  <Input\r\n                    id=\"species\"\r\n                    type=\"text\"\r\n                    element=\"input\"\r\n                    placeholder=\"종류를 입력해주세요.\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    initialValue={loadedAnimal.species}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    errorText={\"올바른 종류를 입력해주세요.\"}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"age\">나이 : </label>\r\n                  <Input\r\n                    id=\"age\"\r\n                    type=\"text\"\r\n                    element=\"input\"\r\n                    placeholder=\"나이를 입력해주세요.\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    initialValue={loadedAnimal.age}\r\n                    initialValid={true}\r\n                    onInput={inputHandler}\r\n                    errorText={\"올바른 나이를 입력해주세요.\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={classes[\"update-animal__desc\"]}>\r\n                <label htmlFor=\"description\">특징 : </label>\r\n                <Input\r\n                  id=\"description\"\r\n                  placeholder=\"특징을 입력해주세요.\"\r\n                  element=\"textarea\"\r\n                  validators={[VALIDATOR_MINLENGTH(5)]}\r\n                  initialValue={loadedAnimal.description}\r\n                  initialValid={true}\r\n                  rows={5}\r\n                  onInput={inputHandler}\r\n                  errorText={\"특징을 5글자 이상 입력해주세요.\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <button\r\n            className={classes[\"animal-list__btns\"]}\r\n            type=\"submit\"\r\n            disabled={!formState.isValid}\r\n          >\r\n            수정완료\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateAnimal;\r\n"],"names":["useHttpReq","isLoading","error","sendRequest","clearError","animalId","useParams","useState","loadedAnimal","setLoadedAnimal","auth","useContext","AuthContext","navigate","useNavigate","useForm","animalName","value","isValid","species","age","description","formState","inputHandler","setFormData","useEffect","getAnimal","process","responseData","animal","handleSubmitUpdate","evt","preventDefault","Authorization","token","JSON","stringify","inputs","className","classes","LoadingSpinner","Fragment","ErrorModal","onClose","errorText","onSubmit","htmlFor","Input","id","type","element","placeholder","validators","VALIDATOR_REQUIRE","initialValue","initialValid","onInput","VALIDATOR_MINLENGTH","rows","disabled"],"sourceRoot":""}